// Generated by CoffeeScript 1.8.0
(function() {
  var DRAGGING_ILLUSION_FROM_LIST, DRAGGING_ILLUSION_FROM_PANEL, DRAGGING_OUTPUT_FROM_PANEL, currentDraggingData, currentDraggingType, currentIllusionList, documentReady, illusions, loadIllusions, logLocation, setupDropEvent;

  illusions = null;

  currentIllusionList = 0;

  currentDraggingType = 0;

  currentDraggingData = null;

  DRAGGING_ILLUSION_FROM_LIST = 1;

  DRAGGING_ILLUSION_FROM_PANEL = 2;

  DRAGGING_OUTPUT_FROM_PANEL = 3;

  logLocation = function() {
    var $illusion1;
    $illusion1 = $("#illusion-2");
    console.log($("#illusion-1").position());
    console.log($("#illusion-2").position());
    return console.log($("#illusion-3").position());
  };

  loadIllusions = function() {
    var $illusionList, $illusionType, $item, createDragStart, i, ill, setChangeCurrentIllusionList, str_i, templateIllusionItem, templateIllusionTypeItem, _ref, _results;
    templateIllusionTypeItem = _template($("#template-illusion-type-item").html());
    $illusionType = $("#illusion-type");
    $illusionType.html("");
    for (str_i in illusions) {
      ill = illusions[str_i];
      i = parseInt(str_i);
      if (currentIllusionList === i) {
        ill["current"] = true;
      } else {
        ill["current"] = false;
      }
      $item = $(templateIllusionTypeItem(ill));
      setChangeCurrentIllusionList = function() {
        var newListId, onClick;
        newListId = i;
        onClick = function() {
          currentIllusionList = newListId;
          return loadIllusions();
        };
        return onClick;
      };
      $item.click(setChangeCurrentIllusionList());
      $illusionType.append($item);
    }
    templateIllusionItem = _template($("#template-illusion-item").html());
    $illusionList = $("#illusion-list");
    $illusionList.html("");
    _ref = illusions[currentIllusionList]["list"];
    _results = [];
    for (str_i in _ref) {
      ill = _ref[str_i];
      $item = $(templateIllusionItem(ill));
      createDragStart = function() {
        var currentIll, dragStart;
        currentIll = ill;
        dragStart = function() {
          currentDraggingType = DRAGGING_ILLUSION_FROM_LIST;
          return currentDraggingData = currentIll;
        };
        return dragStart;
      };
      $item.on("dragstart", createDragStart());
      _results.push($illusionList.append($item));
    }
    return _results;
  };

  setupDropEvent = function() {
    $(".illusion-plus").on("dragover", function(e) {
      return e.preventDefault();
    });
    return $(".illusion-plus").on("drop", function(e) {
      console.log(currentDraggingType);
      return console.log(currentDraggingData);
    });
  };

  documentReady = function() {
    $.ajax({
      "url": "illusions.json",
      "dataType": "json",
      "success": function(data) {
        illusions = data;
        return loadIllusions();
      }
    });
    return setupDropEvent();
  };

  $(document).ready(documentReady);

}).call(this);

//# sourceMappingURL=editor.js.map
